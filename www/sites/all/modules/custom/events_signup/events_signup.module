<?php

function events_signup_menu(){
  $items = array();
  
  $items['event/signup/%'] = array(
    'title' => 'Signup',
    'description' => 'Signup for an event',
    'page callback' => 'events_signup_display',
    'page arguments' => array(2),
    'access callback' => array(1),
    'type' => MENU_CALLBACK,
  );
  
  $items['event/registration/%'] = array(
    'title' => 'Registration',
    'description' => 'Signup for an event',
    'page callback' => 'events_signup_display',
    'page arguments' => array(2),
    'access arguments' => TRUE,
    'type' => MENU_CALLBACK,
  );
  
  return $items;
}

function events_signup_display($nid){

  $form = events_signup_form();
  
  return $form;
  
}

function events_signup_form(){
  
  module_load_include('inc', 'node', 'node.pages');
  
  $form = node_add('event_registration');
  
  $output = drupal_render($form);
  
  return $output;
  
}

function events_signup_form_alter(&$form, &$form_state, $form_id){
  if($form_id == 'event_registration_node_form'){
  
    global $user;
    
    //set default values if the user is logged in
    
    if($user->uid > 0){
    
      $form['field_register_full_name']['und'][0]['value']['#default_value'] = $user->name;
      
      $form['uid_id'] = array(
        '#type' => 'value',
        '#value' => $user->uid,
      );
    
    }
    
    //remove the node options
    
    $form['options']['status'] = array(
      '#type' => 'value',
      '#value' => '1',
    );
    
    $form['options'] = array(
      '#type' => 'container',
      '#title' => '',
    );
    
    hide($form['additional_settings']);
    
    //pass event id and user
  
    $form['event_id'] = array(
      '#type' => 'value',
      '#value' => arg(2),
    );
    
    unset($form['body']);
    
    //set title of form to the event title and date
    $node = node_load(arg(2));
        
    $title = '<h1>' . $node->title . ' Signup ';
    $title .= (!empty($node->field_event_date)) ? '<div class="date day">' . date('F d, Y',strtotime($node->field_event_date['und'][0]['value'])) . '</div><div class="date time">' . date('g:ia',strtotime($node->field_event_date['und'][0]['value'])) . '</div>' : '';
    
    $title .= '</h1>';

    $form['title']['#prefix'] = $title;
    
    //if event has a confirmation page, redirect there
    if(!empty($node->field_event_redirect) && !empty($node->field_event_redirect['und'][0]['value'])){
      $form['redirect'] = array(
        '#type' => 'value',
        '#value' => $node->field_event_redirect['und'][0]['value'],
      );
      $form['#submit'][] = 'events_signup_redirect_form';
    } else {
      $form['message'] = array(
        '#type' => 'value',
        '#value' => "Thank you for registering for " . $node->title . ". We'll see you soon!",
      );
      $form['#submit'][] = 'events_signup_message';
    }
    
    drupal_set_title('');
  
  }
}

function events_signup_redirect_form($form, &$form_state){
  drupal_goto('node/' . $form_state['values']['redirect']);
}

function events_signup_message($form, &$form_state){
  drupal_set_message($form_state['values']['message']);
  drupal_goto('event/signup/' . $form_state['values']['event_id']);
}

